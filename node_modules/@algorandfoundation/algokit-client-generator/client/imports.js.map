{"version":3,"file":"imports.js","sources":["../../src/client/imports.ts"],"sourcesContent":["import { DocumentParts } from '../output/writer'\nimport { GeneratorContext } from './generator-context'\n\nexport function* imports(ctx: GeneratorContext): DocumentParts {\n  yield `\n    import { type AlgorandClient } from '@algorandfoundation/algokit-utils/types/algorand-client'\n    import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app'\n    import { Arc56Contract, getArc56ReturnValue, getABIStructFromABITuple } from '@algorandfoundation/algokit-utils/types/app-arc56'\n    import {\n      AppClient as _AppClient,\n      AppClientMethodCallParams,\n      AppClientParams,\n      AppClientBareCallParams,\n      CallOnComplete,\n      AppClientCompilationParams,\n      ResolveAppClientByCreatorAndName,\n      ResolveAppClientByNetwork,\n      CloneAppClientParams,\n    } from '@algorandfoundation/algokit-utils/types/app-client'\n    ${ctx.mode === 'full' ? `import { AppFactory as _AppFactory, AppFactoryAppClientParams, AppFactoryResolveAppClientByCreatorAndNameParams, AppFactoryDeployParams, AppFactoryParams, CreateSchema } from '@algorandfoundation/algokit-utils/types/app-factory'` : ''}\n    import { TransactionComposer, AppCallMethodCall, AppMethodCallTransactionArgument, SimulateOptions, RawSimulateOptions, SkipSignaturesSimulateOptions } from '@algorandfoundation/algokit-utils/types/composer'\n    import { SendParams, SendSingleTransactionResult, SendAtomicTransactionComposerResults } from '@algorandfoundation/algokit-utils/types/transaction'\n    import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk'\n  `\n}\n"],"names":[],"mappings":";;AAGe,UAAE,OAAO,CAAC,GAAqB,EAAA;IAC5C,MAAM;;;;;;;;;;;;;;;MAeF,GAAG,CAAC,IAAI,KAAK,MAAM,GAAG,CAAsO,oOAAA,CAAA,GAAG,EAAE;;;;GAIpQ;AACH;;;;"}