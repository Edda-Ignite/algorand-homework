import { AVMTracesEventData } from '@algorandfoundation/algokit-utils';
/**
 * Removes old trace files when total size exceeds buffer limit
 */
export declare function cleanupOldFiles(bufferSizeMb: number, outputRootDir: string): Promise<void>;
/**
 * Generates a descriptive filename for a debug trace based on transaction types
 */
export declare function generateDebugTraceFilename(simulateResponse: AVMTracesEventData['simulateResponse'], timestamp: string): string;
/**
 * Generates an AVM debug trace from the provided simulation response and persists it to a file.
 *
 * @param input - The AVMTracesEventData containing the simulation response and other relevant information.
 * @returns An object containing the output file path and the trace content as a string.
 *
 * @example
 * const eventData: AVMTracesEventData = {
 *   simulateResponse: // ... simulation response object
 * };
 *
 * const result = await writeAVMDebugTrace(eventData);
 * console.log(`Debug trace saved to: ${result.outputPath}`);
 * console.log(`Trace content: ${result.traceContent}`);
 */
export declare function writeAVMDebugTrace(input: AVMTracesEventData, bufferSizeMb: number): Promise<void>;
