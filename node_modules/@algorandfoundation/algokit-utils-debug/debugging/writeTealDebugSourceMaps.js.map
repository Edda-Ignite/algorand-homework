{"version":3,"file":"writeTealDebugSourceMaps.js","sources":["../../src/debugging/writeTealDebugSourceMaps.ts"],"sourcesContent":["import {\n  ALGOKIT_DIR,\n  SOURCES_DIR,\n  TEAL_FILE_EXT,\n  TEAL_SOURCEMAP_EXT,\n  TealSourceDebugEventData,\n  TealSourcesDebugEventData,\n} from '@algorandfoundation/algokit-utils'\nimport { getProjectRoot, writeToFile } from '../utils'\n\nasync function writeTealDebugSourceMap(source: TealSourceDebugEventData, projectRoot: string): Promise<void> {\n  const path = await import('path')\n\n  if (!source.compiledTeal) {\n    throw new Error('No compiled teal found')\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const result = source.compiledTeal\n  const sourceMap = {\n    ...result.sourceMap,\n    sources: [`${source.fileName}${TEAL_FILE_EXT}`],\n  }\n  const outputDirPath = path.join(projectRoot, ALGOKIT_DIR, SOURCES_DIR, source.appName)\n  const sourceMapOutputPath = path.join(outputDirPath, `${source.fileName}${TEAL_SOURCEMAP_EXT}`)\n  const tealOutputPath = path.join(outputDirPath, `${source.fileName}${TEAL_FILE_EXT}`)\n  await writeToFile(sourceMapOutputPath, JSON.stringify(sourceMap, null, 2))\n  await writeToFile(tealOutputPath, result.teal)\n}\n\n/**\n * Generates and writes debug source maps for multiple TEAL sources.\n *\n * @param input - An object of type TealSourcesDebugEventData containing an array of TEAL sources.\n * @returns A promise that resolves when all source maps have been generated and written.\n * @throws Will throw an error if there's an issue during the source map generation or writing process.\n */\nexport async function writeTealDebugSourceMaps(input: TealSourcesDebugEventData): Promise<void> {\n  const sources = input.sources\n  const projectRoot = await getProjectRoot()\n\n  try {\n    await Promise.all(\n      sources.map((source) => {\n        writeTealDebugSourceMap(source, projectRoot)\n      }),\n    )\n  } catch (error) {\n    const err = error instanceof Error ? error : new Error(JSON.stringify(error, null, 2))\n    throw err\n  }\n}\n"],"names":["TEAL_FILE_EXT","ALGOKIT_DIR","SOURCES_DIR","TEAL_SOURCEMAP_EXT","writeToFile","getProjectRoot"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAUA,eAAe,uBAAuB,CAAC,MAAgC,EAAE,WAAmB,EAAA;AAC1F,IAAA,MAAM,IAAI,GAAG,MAAM,0FAAO,MAAM,MAAC,CAAA;AAEjC,IAAA,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;AACxB,QAAA,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAA;KAC1C;;AAGD,IAAA,MAAM,MAAM,GAAG,MAAM,CAAC,YAAY,CAAA;AAClC,IAAA,MAAM,SAAS,GAAG;QAChB,GAAG,MAAM,CAAC,SAAS;QACnB,OAAO,EAAE,CAAC,CAAG,EAAA,MAAM,CAAC,QAAQ,CAAA,EAAGA,0BAAa,CAAA,CAAE,CAAC;KAChD,CAAA;AACD,IAAA,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAEC,wBAAW,EAAEC,wBAAW,EAAE,MAAM,CAAC,OAAO,CAAC,CAAA;AACtF,IAAA,MAAM,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAG,EAAA,MAAM,CAAC,QAAQ,CAAA,EAAGC,+BAAkB,CAAA,CAAE,CAAC,CAAA;AAC/F,IAAA,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAG,EAAA,MAAM,CAAC,QAAQ,CAAA,EAAGH,0BAAa,CAAA,CAAE,CAAC,CAAA;AACrF,IAAA,MAAMI,iBAAW,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;IAC1E,MAAMA,iBAAW,CAAC,cAAc,EAAE,MAAM,CAAC,IAAI,CAAC,CAAA;AAChD,CAAC;AAED;;;;;;AAMG;AACI,eAAe,wBAAwB,CAAC,KAAgC,EAAA;AAC7E,IAAA,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAA;AAC7B,IAAA,MAAM,WAAW,GAAG,MAAMC,oBAAc,EAAE,CAAA;AAE1C,IAAA,IAAI;QACF,MAAM,OAAO,CAAC,GAAG,CACf,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,KAAI;AACrB,YAAA,uBAAuB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAA;SAC7C,CAAC,CACH,CAAA;KACF;IAAC,OAAO,KAAK,EAAE;QACd,MAAM,GAAG,GAAG,KAAK,YAAY,KAAK,GAAG,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;AACtF,QAAA,MAAM,GAAG,CAAA;KACV;AACH;;;;"}