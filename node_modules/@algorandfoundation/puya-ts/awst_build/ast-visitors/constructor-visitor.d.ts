import ts from 'typescript';
import type { ContractReference } from '../../awst/models';
import * as awst from '../../awst/nodes';
import type { ContractClassPType } from '../ptypes';
import { ContractMethodBaseVisitor } from './contract-method-visitor';
export interface ConstructorInfo {
    propertyInitializerStatements: awst.Statement[];
    cref: ContractReference;
}
export declare class ConstructorVisitor extends ContractMethodBaseVisitor {
    private readonly contractInfo;
    private _foundSuperCall;
    constructor(node: ts.ConstructorDeclaration, contractType: ContractClassPType, contractInfo: ConstructorInfo);
    get result(): awst.ContractMethod;
    static buildConstructor(node: ts.ConstructorDeclaration, contractType: ContractClassPType, constructorMethodInfo: ConstructorInfo): () => awst.ContractMethod;
    visitBlock(node: ts.Block): awst.Block;
}
