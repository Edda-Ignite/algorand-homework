import ts from 'typescript';
import type { DecoratorData, DecoratorDataForType } from '../models/decorator-data';
import { BaseVisitor } from './base-visitor';
export declare class DecoratorVisitor extends BaseVisitor {
    private accept;
    readonly result: DecoratorData;
    constructor(node: ts.Decorator);
    private static buildDecoratorData;
    static buildContractData(target: ts.ClassDeclaration): import("../models/decorator-data").ContractOptionsDecoratorData | undefined;
    static buildLogicSigData(target: ts.ClassDeclaration): import("../models/decorator-data").LogicSigOptionsDecoratorData | undefined;
    static buildContractMethodData(target: ts.MethodDeclaration): DecoratorDataForType<"arc4.baremethod" | "arc4.abimethod"> | undefined;
    private static filterDecoratorData;
}
