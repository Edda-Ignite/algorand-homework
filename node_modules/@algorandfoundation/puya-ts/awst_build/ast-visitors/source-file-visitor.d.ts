import ts from 'typescript';
import type * as awst from '../../awst/nodes';
import type { ModuleStatements } from '../../visitor/syntax-names';
import type { Visitor } from '../../visitor/visitor';
import { BaseVisitor } from './base-visitor';
type NodeOrDeferred = awst.AWST[] | awst.AWST | (() => awst.AWST[] | awst.AWST);
export declare class SourceFileVisitor extends BaseVisitor implements Visitor<ModuleStatements, NodeOrDeferred> {
    private _moduleStatements;
    private accept;
    constructor(sourceFile: ts.SourceFile);
    visitInterfaceDeclaration(node: ts.InterfaceDeclaration): NodeOrDeferred;
    visitTypeAliasDeclaration(_node: ts.TypeAliasDeclaration): NodeOrDeferred;
    visitFunctionDeclaration(node: ts.FunctionDeclaration): NodeOrDeferred;
    buildModule(): awst.AWST[];
    private gatherStatements;
    visitVariableStatement(node: ts.VariableStatement): NodeOrDeferred;
    visitImportDeclaration(_node: ts.ImportDeclaration): NodeOrDeferred;
    visitClassDeclaration(node: ts.ClassDeclaration): NodeOrDeferred;
}
export {};
