import type { Expression, LValue } from '../../../awst/nodes';
import type { SourceLocation } from '../../../awst/source-location';
import type { PTypeOrClass } from '../../ptypes';
import { ArrayLiteralPType, ArrayPType } from '../../ptypes';
import type { NodeBuilder } from '../index';
import { InstanceBuilder } from '../index';
import type { StaticallyIterable } from '../traits/static-iterator';
import { StaticIterator } from '../traits/static-iterator';
export declare class ArrayLiteralExpressionBuilder extends InstanceBuilder implements StaticallyIterable {
    private readonly items;
    readonly ptype: ArrayLiteralPType | ArrayPType;
    constructor(sourceLocation: SourceLocation, items: InstanceBuilder[], ptype?: ArrayPType | ArrayLiteralPType);
    resolve(): Expression;
    resolveLValue(): LValue;
    singleEvaluation(): InstanceBuilder;
    indexAccess(index: InstanceBuilder, sourceLocation: SourceLocation): NodeBuilder;
    memberAccess(name: string, sourceLocation: SourceLocation): NodeBuilder;
    resolveToPType(ptype: PTypeOrClass): InstanceBuilder;
    resolvableToPType(ptype: PTypeOrClass): boolean;
    [StaticIterator](): InstanceBuilder[];
}
