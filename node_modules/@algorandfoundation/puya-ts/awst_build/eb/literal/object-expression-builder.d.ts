import type { Expression } from '../../../awst/nodes';
import type { SourceLocation } from '../../../awst/source-location';
import type { PTypeOrClass } from '../../ptypes';
import { ObjectPType, type PType } from '../../ptypes';
import type { InstanceBuilder } from '../index';
import { InstanceExpressionBuilder, type NodeBuilder } from '../index';
export declare class ObjectExpressionBuilder extends InstanceExpressionBuilder<ObjectPType> {
    constructor(expr: Expression, ptype: PType);
    memberAccess(name: string, sourceLocation: SourceLocation): NodeBuilder;
    hasProperty(name: string): boolean;
    resolvableToPType(ptype: PTypeOrClass): ptype is ObjectPType;
    resolveToPType(ptype: PTypeOrClass): InstanceBuilder;
}
