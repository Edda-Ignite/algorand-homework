import type { Expression, LValue } from '../../awst/nodes';
import type { SourceLocation } from '../../awst/source-location';
import { LogicSigPType, type PType } from '../ptypes';
import { FunctionBuilder, InstanceBuilder, type NodeBuilder } from './index';
export declare class LogicSigClassBuilder extends InstanceBuilder {
    resolve(): Expression;
    resolveLValue(): LValue;
    readonly ptype: LogicSigPType;
    constructor(sourceLocation: SourceLocation, ptype: PType);
    newCall(args: ReadonlyArray<NodeBuilder>, typeArgs: ReadonlyArray<PType>, sourceLocation: SourceLocation): InstanceBuilder;
    call(args: ReadonlyArray<NodeBuilder>, typeArgs: ReadonlyArray<PType>, sourceLocation: SourceLocation): InstanceBuilder;
}
export declare class LogicSigOptionsDecoratorBuilder extends FunctionBuilder {
    readonly ptype: import("../ptypes").LibFunctionType;
    call(args: ReadonlyArray<NodeBuilder>, typeArgs: ReadonlyArray<PType>, sourceLocation: SourceLocation): NodeBuilder;
}
