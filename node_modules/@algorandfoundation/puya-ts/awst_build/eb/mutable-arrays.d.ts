import type { Expression } from '../../awst/nodes';
import type { SourceLocation } from '../../awst/source-location';
import type { LibClassType, PType } from '../ptypes';
import { MutableArrayType } from '../ptypes';
import type { InstanceBuilder, NodeBuilder } from './index';
import { ClassBuilder, InstanceExpressionBuilder } from './index';
export declare class MutableArrayClassBuilder extends ClassBuilder {
    ptype: LibClassType;
    newCall(args: ReadonlyArray<NodeBuilder>, typeArgs: ReadonlyArray<PType>, sourceLocation: SourceLocation): InstanceBuilder;
}
export declare class MutableArrayExpressionBuilder extends InstanceExpressionBuilder<MutableArrayType> {
    constructor(expr: Expression, ptype: PType);
    iterate(sourceLocation: SourceLocation): Expression;
    indexAccess(index: InstanceBuilder, sourceLocation: SourceLocation): NodeBuilder;
    memberAccess(name: string, sourceLocation: SourceLocation): NodeBuilder;
}
