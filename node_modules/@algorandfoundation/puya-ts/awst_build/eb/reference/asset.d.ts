import type { Expression } from '../../../awst/nodes';
import type { SourceLocation } from '../../../awst/source-location';
import type { PType } from '../../ptypes';
import type { NodeBuilder } from '../index';
import { FunctionBuilder } from '../index';
import { Uint64BackedReferenceTypeExpressionBuilder } from './base';
export declare class AssetFunctionBuilder extends FunctionBuilder {
    call(args: ReadonlyArray<NodeBuilder>, typeArgs: ReadonlyArray<PType>, sourceLocation: SourceLocation): NodeBuilder;
}
export declare class AssetExpressionBuilder extends Uint64BackedReferenceTypeExpressionBuilder {
    constructor(expr: Expression);
    memberAccess(name: string, sourceLocation: SourceLocation): NodeBuilder;
}
