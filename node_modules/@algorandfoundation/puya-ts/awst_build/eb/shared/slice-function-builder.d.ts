import type { Expression } from '../../../awst/nodes';
import type { SourceLocation } from '../../../awst/source-location';
import type { wtypes } from '../../../awst/wtypes';
import type { PType } from '../../ptypes';
import type { NodeBuilder } from '../index';
import { FunctionBuilder } from '../index';
export declare class SliceFunctionBuilder extends FunctionBuilder {
    private base;
    private resultPType;
    constructor(base: Expression, resultPType: PType & {
        wtype: wtypes.WType;
    });
    call(args: ReadonlyArray<NodeBuilder>, typeArgs: ReadonlyArray<PType>, sourceLocation: SourceLocation): NodeBuilder;
}
