import type { Expression } from '../../../../awst/nodes';
import type { SourceLocation } from '../../../../awst/source-location';
import type { PType } from '../../../ptypes';
import { BoxMapPType } from '../../../ptypes';
import { FunctionBuilder, type NodeBuilder } from '../../index';
import { BoxProxyExpressionBuilder } from './base';
export declare class BoxMapFunctionBuilder extends FunctionBuilder {
    call(args: ReadonlyArray<NodeBuilder>, typeArgs: ReadonlyArray<PType>, sourceLocation: SourceLocation): NodeBuilder;
}
export declare class BoxMapExpressionBuilder extends BoxProxyExpressionBuilder<BoxMapPType> {
    constructor(expr: Expression, ptype: PType);
    call(args: ReadonlyArray<NodeBuilder>, typeArgs: ReadonlyArray<PType>, sourceLocation: SourceLocation): NodeBuilder;
    memberAccess(name: string, sourceLocation: SourceLocation): NodeBuilder;
}
