import type { Expression } from '../../awst/nodes';
import type { SourceLocation } from '../../awst/source-location';
import type { PType, PTypeOrClass } from '../ptypes';
import { TuplePType } from '../ptypes';
import type { InstanceBuilder, NodeBuilder } from './index';
import { InstanceExpressionBuilder } from './index';
import type { StaticallyIterable } from './traits/static-iterator';
import { StaticIterator } from './traits/static-iterator';
export declare class TupleExpressionBuilder extends InstanceExpressionBuilder<TuplePType> implements StaticallyIterable {
    constructor(expression: Expression, ptype: PType);
    iterate(): Expression;
    resolvableToPType(ptype: PTypeOrClass): boolean;
    resolveToPType(ptype: PTypeOrClass): InstanceBuilder;
    memberAccess(name: string, sourceLocation: SourceLocation): NodeBuilder;
    indexAccess(index: InstanceBuilder, sourceLocation: SourceLocation): NodeBuilder;
    [StaticIterator](): InstanceBuilder[];
}
