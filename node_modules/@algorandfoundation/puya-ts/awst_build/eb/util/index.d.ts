import type { awst } from '../../../awst';
import type { Expression } from '../../../awst/nodes';
import type { PType, PTypeOrClass } from '../../ptypes';
import type { NodeBuilder } from '../index';
import { InstanceBuilder } from '../index';
export declare function requireExpressionOfType(builder: NodeBuilder, ptype: PTypeOrClass): Expression;
export declare function requireBuilderOfType(builder: NodeBuilder, ptype: PTypeOrClass): InstanceBuilder;
export declare function resolvableToType(builder: NodeBuilder, ptype: PTypeOrClass): builder is InstanceBuilder;
export declare function requestExpressionOfType(builder: NodeBuilder, ptype: PTypeOrClass): Expression | undefined;
export declare function requestBuilderOfType(builder: NodeBuilder, ptype: PTypeOrClass): InstanceBuilder | undefined;
export declare function requireInstanceBuilder(builder: NodeBuilder): InstanceBuilder;
export declare function requireStringConstant(builder: NodeBuilder): awst.StringConstant;
export declare function requireIntegerConstant(builder: NodeBuilder): awst.IntegerConstant;
export declare function requireBooleanConstant(builder: NodeBuilder): awst.BoolConstant;
export declare function requestConstantOfType(builder: NodeBuilder, ptype: PType): awst.Constant | undefined;
export declare function requireConstantOfType(builder: NodeBuilder, ptype: PType, messageOverride?: string): awst.Constant;
export declare function requireLiteralNumber(builder: NodeBuilder): bigint;
