{"version":3,"file":"cli.mjs","sources":["../src/cli/util.ts","../src/cli/build-command.ts","../src/cli/parse.ts","../src/cli.ts"],"sourcesContent":["import type { ArgumentParser } from 'argparse'\nimport { enumFromValue } from '../util'\n\nexport function addEnumArg<T>(\n  parser: ArgumentParser,\n  { name, enumType, default: defaultValue, help }: { name: string; enumType: Record<string, string>; default?: T; help: string },\n) {\n  parser.add_argument(name, {\n    type: (v: string) => enumFromValue(v, enumType),\n    choices: Array.from(Object.values(enumType)),\n    default: defaultValue,\n    help,\n  })\n}\n\nexport function convertInt(val: string) {\n  const res = Number(val)\n  if (isNaN(res) || Math.round(res) !== res) {\n    throw new Error(`'${val}' could not be converted to a number`)\n  }\n  return res\n}\n","import type { ArgumentParser } from 'argparse'\nimport { BooleanOptionalAction } from 'argparse'\nimport { compile } from '../compile'\nimport { processInputPaths } from '../input-paths/process-input-paths'\nimport { logger, LoggingContext, LogLevel } from '../logger'\nimport { ConsoleLogSink } from '../logger/sinks/console-log-sink'\nimport { CompileOptions, defaultPuyaOptions, LocalsCoalescingStrategy } from '../options'\n\nimport { parseCliTemplateVar } from '../util/template-var-cli-parser'\nimport { addEnumArg, convertInt } from './util'\n\nexport interface BuildCommandArgs {\n  command: 'build'\n  log_level: LogLevel\n  output_awst: boolean\n  output_awst_json: boolean\n  dry_run: boolean\n  skip_version_check: boolean\n  output_teal: boolean\n  output_source_map: boolean\n  output_arc32: boolean\n  output_arc56: boolean\n  output_ssa_ir: boolean\n  output_optimization_ir: boolean\n  output_destructured_ir: boolean\n  output_memory_ir: boolean\n  output_bytecode: boolean\n  out_dir: string\n  debug_level: string\n  optimization_level: string\n  target_avm_version: string\n  cli_template_definitions: string[]\n  template_vars_prefix: string\n  locals_coalescing_strategy: LocalsCoalescingStrategy\n  paths: string[]\n  puya_path: string\n}\n\nexport function addBuildCommand(parser: ArgumentParser) {\n  addEnumArg(parser, {\n    name: '--log-level',\n    default: LogLevel.Info,\n    enumType: LogLevel,\n    help: 'The minimum log level to output',\n  })\n\n  parser.add_argument('--output-awst', {\n    help: 'Output debugging awst file per parsed file',\n    default: false,\n    action: BooleanOptionalAction,\n  })\n\n  parser.add_argument('--output-awst-json', {\n    action: BooleanOptionalAction,\n    default: false,\n    help: 'Output debugging awst json file per parsed file',\n  })\n\n  parser.add_argument('--dry-run', {\n    action: BooleanOptionalAction,\n    default: false,\n    help: \"Just parse typescript files, don't invoke puya compiler\",\n  })\n  parser.add_argument('--skip-version-check', {\n    action: BooleanOptionalAction,\n    default: false,\n    help: \"Don't verify installed puya compiler version matches targeted version\",\n  })\n  parser.add_argument('--output-teal', {\n    action: BooleanOptionalAction,\n    help: 'Output TEAL code',\n    default: defaultPuyaOptions.outputTeal,\n  })\n  parser.add_argument('--output-source-map', {\n    action: BooleanOptionalAction,\n    help: 'Output debug source maps ',\n    default: defaultPuyaOptions.outputSourceMap,\n  })\n  parser.add_argument('--output-arc32', {\n    action: BooleanOptionalAction,\n    help: 'Output {contract}.arc32.json ARC-32 app spec file. Only applicable to ARC4 contracts ',\n    default: defaultPuyaOptions.outputArc32,\n  })\n  parser.add_argument('--output-arc56', {\n    action: BooleanOptionalAction,\n    help: 'Output {contract}.arc56.json ARC-56 app spec file. Only applicable to ARC4 contracts ',\n    default: defaultPuyaOptions.outputArc56,\n  })\n  parser.add_argument('--output-ssa-ir', {\n    action: BooleanOptionalAction,\n    help: 'Output IR (in SSA form) before optimisations',\n    default: defaultPuyaOptions.outputSsaIr,\n  })\n  parser.add_argument('--output-optimization-ir', {\n    action: BooleanOptionalAction,\n    help: 'Output IR after each optimization',\n    default: defaultPuyaOptions.outputOptimizationIr,\n  })\n  parser.add_argument('--output-destructured-ir', {\n    action: BooleanOptionalAction,\n    help: 'Output IR after SSA destructuring and before MIR',\n    default: defaultPuyaOptions.outputDestructuredIr,\n  })\n  parser.add_argument('--output-memory-ir', {\n    action: BooleanOptionalAction,\n    help: 'Output MIR before lowering to TealOps',\n    default: defaultPuyaOptions.outputMemoryIr,\n  })\n  parser.add_argument('--output-bytecode', {\n    action: BooleanOptionalAction,\n    help: 'Output AVM bytecode',\n    default: defaultPuyaOptions.outputBytecode,\n  })\n\n  parser.add_argument('--out-dir', {\n    action: 'store',\n    help: 'Where to output builder artifacts. Can use [name] placeholder to include contract name in path',\n    default: 'out',\n  })\n\n  parser.add_argument('--debug-level', {\n    default: defaultPuyaOptions.debugLevel.toString(),\n    choices: ['0', '1', '2'],\n    help: 'Output debug information level, 0 = none, 1 = debug, 2 = reserved for future use',\n  })\n  parser.add_argument('--optimization-level', {\n    default: defaultPuyaOptions.optimizationLevel.toString(),\n    choices: ['0', '1', '2'],\n    help: 'Set optimization level of output TEAL / AVM bytecode, 0 = none, 1 = normal, 2 = intensive',\n  })\n  parser.add_argument('--target-avm-version', {\n    default: defaultPuyaOptions.targetAvmVersion.toString(),\n    choices: ['10', '11'],\n    help: 'Select the targeted AVM version for compilation output',\n  })\n\n  parser.add_argument('--cli-template-definitions', {\n    metavar: 'VAR=VALUE',\n    nargs: '+',\n    help: 'Define template vars for use when assembling via --output-bytecode, should be specified without the prefix (see --template-vars-prefix)',\n  })\n\n  parser.add_argument('--template-vars-prefix', {\n    help: 'Define the prefix to use with --template-var',\n    default: defaultPuyaOptions.templateVarsPrefix,\n  })\n\n  addEnumArg(parser, {\n    name: '--locals-coalescing-strategy',\n    enumType: LocalsCoalescingStrategy,\n    help: 'Strategy choice for out-of-ssa local variable coalescing. The best choice for your app is best determined through experimentation',\n    default: defaultPuyaOptions.localsCoalescingStrategy,\n  })\n\n  parser.add_argument('paths', {\n    metavar: 'PATHS',\n    nargs: '*',\n    help: 'The path, or paths to search for compatible .algo.ts files',\n    default: ['.'],\n  })\n\n  parser.add_argument('--puya-path', {\n    help: 'The path to Puya. If not provided, puya-ts will automatically download the appropriate binary for your system',\n  })\n}\n\nexport async function buildCommand(args: BuildCommandArgs) {\n  const logCtx = LoggingContext.create()\n  return logCtx.run(async () => {\n    logger.configure([new ConsoleLogSink(args.log_level)])\n    try {\n      const filePaths = processInputPaths({ paths: args.paths, outDir: args.out_dir })\n\n      await compile(\n        new CompileOptions({\n          filePaths,\n          outputAwst: args.output_awst,\n          outputAwstJson: args.output_awst_json,\n\n          skipVersionCheck: args.skip_version_check,\n          dryRun: args.dry_run,\n          logLevel: args.log_level,\n\n          outputTeal: args.output_teal,\n          outputArc32: args.output_arc32,\n          outputArc56: args.output_arc56,\n          outputSsaIr: args.output_ssa_ir,\n          outputOptimizationIr: args.output_optimization_ir,\n          outputDestructuredIr: args.output_destructured_ir,\n          outputMemoryIr: args.output_memory_ir,\n          outputBytecode: args.output_bytecode,\n          outputSourceMap: args.output_source_map,\n          debugLevel: convertInt(args.debug_level),\n          optimizationLevel: convertInt(args.optimization_level),\n          targetAvmVersion: convertInt(args.target_avm_version),\n          cliTemplateDefinitions: Object.fromEntries(args.cli_template_definitions?.map(parseCliTemplateVar) ?? []),\n          templateVarsPrefix: args.template_vars_prefix,\n          localsCoalescingStrategy: args.locals_coalescing_strategy,\n\n          customPuyaPath: args.puya_path,\n        }),\n      )\n      logCtx.exitIfErrors()\n    } catch (e) {\n      if (e instanceof Error) {\n        logger.error(e)\n      } else {\n        throw e\n      }\n    }\n  })\n}\n","import { ArgumentParser } from 'argparse'\nimport { appVersion } from './app-version'\nimport type { BuildCommandArgs } from './build-command'\nimport { addBuildCommand, buildCommand } from './build-command'\nimport { checkNodeVersion } from './check-node-version'\n\nexport async function parseCliArguments() {\n  checkNodeVersion()\n  const parser = new ArgumentParser({\n    prog: 'puya-ts',\n  })\n\n  parser.add_argument('--version', {\n    action: 'store_const',\n    help: 'Show application version',\n    const: 'version',\n    dest: 'command',\n  })\n  parser.set_defaults({\n    command: 'build',\n  })\n  addBuildCommand(parser)\n  const result: PuyaTsCommand = parser.parse_args()\n  switch (result.command) {\n    case 'build':\n      await buildCommand(result)\n      break\n    case 'version':\n      /* eslint-disable-next-line no-console */\n      console.log(appVersion())\n      break\n    default:\n      parser.print_help()\n      break\n  }\n}\n\ntype PuyaTsCommand = NoCommandArgs | BuildCommandArgs | VersionCommand\ninterface NoCommandArgs {\n  command: 'none'\n}\ninterface VersionCommand {\n  command: 'version'\n}\n","import { parseCliArguments } from './cli/parse'\n\nvoid parseCliArguments()\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGgB,SAAA,UAAU,CACxB,MAAsB,EACtB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,YAAY,EAAE,IAAI,EAAiF,EAAA;AAE9H,IAAA,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE;QACxB,IAAI,EAAE,CAAC,CAAS,KAAK,aAAa,CAAC,CAAC,EAAE,QAAQ,CAAC;QAC/C,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC5C,QAAA,OAAO,EAAE,YAAY;QACrB,IAAI;AACL,KAAA,CAAC;AACJ;AAEM,SAAU,UAAU,CAAC,GAAW,EAAA;AACpC,IAAA,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AACvB,IAAA,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE;AACzC,QAAA,MAAM,IAAI,KAAK,CAAC,IAAI,GAAG,CAAA,oCAAA,CAAsC,CAAC;;AAEhE,IAAA,OAAO,GAAG;AACZ;;ACiBM,SAAU,eAAe,CAAC,MAAsB,EAAA;IACpD,UAAU,CAAC,MAAM,EAAE;AACjB,QAAA,IAAI,EAAE,aAAa;QACnB,OAAO,EAAE,QAAQ,CAAC,IAAI;AACtB,QAAA,QAAQ,EAAE,QAAQ;AAClB,QAAA,IAAI,EAAE,iCAAiC;AACxC,KAAA,CAAC;AAEF,IAAA,MAAM,CAAC,YAAY,CAAC,eAAe,EAAE;AACnC,QAAA,IAAI,EAAE,4CAA4C;AAClD,QAAA,OAAO,EAAE,KAAK;AACd,QAAA,MAAM,EAAE,qBAAqB;AAC9B,KAAA,CAAC;AAEF,IAAA,MAAM,CAAC,YAAY,CAAC,oBAAoB,EAAE;AACxC,QAAA,MAAM,EAAE,qBAAqB;AAC7B,QAAA,OAAO,EAAE,KAAK;AACd,QAAA,IAAI,EAAE,iDAAiD;AACxD,KAAA,CAAC;AAEF,IAAA,MAAM,CAAC,YAAY,CAAC,WAAW,EAAE;AAC/B,QAAA,MAAM,EAAE,qBAAqB;AAC7B,QAAA,OAAO,EAAE,KAAK;AACd,QAAA,IAAI,EAAE,yDAAyD;AAChE,KAAA,CAAC;AACF,IAAA,MAAM,CAAC,YAAY,CAAC,sBAAsB,EAAE;AAC1C,QAAA,MAAM,EAAE,qBAAqB;AAC7B,QAAA,OAAO,EAAE,KAAK;AACd,QAAA,IAAI,EAAE,uEAAuE;AAC9E,KAAA,CAAC;AACF,IAAA,MAAM,CAAC,YAAY,CAAC,eAAe,EAAE;AACnC,QAAA,MAAM,EAAE,qBAAqB;AAC7B,QAAA,IAAI,EAAE,kBAAkB;QACxB,OAAO,EAAE,kBAAkB,CAAC,UAAU;AACvC,KAAA,CAAC;AACF,IAAA,MAAM,CAAC,YAAY,CAAC,qBAAqB,EAAE;AACzC,QAAA,MAAM,EAAE,qBAAqB;AAC7B,QAAA,IAAI,EAAE,2BAA2B;QACjC,OAAO,EAAE,kBAAkB,CAAC,eAAe;AAC5C,KAAA,CAAC;AACF,IAAA,MAAM,CAAC,YAAY,CAAC,gBAAgB,EAAE;AACpC,QAAA,MAAM,EAAE,qBAAqB;AAC7B,QAAA,IAAI,EAAE,uFAAuF;QAC7F,OAAO,EAAE,kBAAkB,CAAC,WAAW;AACxC,KAAA,CAAC;AACF,IAAA,MAAM,CAAC,YAAY,CAAC,gBAAgB,EAAE;AACpC,QAAA,MAAM,EAAE,qBAAqB;AAC7B,QAAA,IAAI,EAAE,uFAAuF;QAC7F,OAAO,EAAE,kBAAkB,CAAC,WAAW;AACxC,KAAA,CAAC;AACF,IAAA,MAAM,CAAC,YAAY,CAAC,iBAAiB,EAAE;AACrC,QAAA,MAAM,EAAE,qBAAqB;AAC7B,QAAA,IAAI,EAAE,8CAA8C;QACpD,OAAO,EAAE,kBAAkB,CAAC,WAAW;AACxC,KAAA,CAAC;AACF,IAAA,MAAM,CAAC,YAAY,CAAC,0BAA0B,EAAE;AAC9C,QAAA,MAAM,EAAE,qBAAqB;AAC7B,QAAA,IAAI,EAAE,mCAAmC;QACzC,OAAO,EAAE,kBAAkB,CAAC,oBAAoB;AACjD,KAAA,CAAC;AACF,IAAA,MAAM,CAAC,YAAY,CAAC,0BAA0B,EAAE;AAC9C,QAAA,MAAM,EAAE,qBAAqB;AAC7B,QAAA,IAAI,EAAE,kDAAkD;QACxD,OAAO,EAAE,kBAAkB,CAAC,oBAAoB;AACjD,KAAA,CAAC;AACF,IAAA,MAAM,CAAC,YAAY,CAAC,oBAAoB,EAAE;AACxC,QAAA,MAAM,EAAE,qBAAqB;AAC7B,QAAA,IAAI,EAAE,uCAAuC;QAC7C,OAAO,EAAE,kBAAkB,CAAC,cAAc;AAC3C,KAAA,CAAC;AACF,IAAA,MAAM,CAAC,YAAY,CAAC,mBAAmB,EAAE;AACvC,QAAA,MAAM,EAAE,qBAAqB;AAC7B,QAAA,IAAI,EAAE,qBAAqB;QAC3B,OAAO,EAAE,kBAAkB,CAAC,cAAc;AAC3C,KAAA,CAAC;AAEF,IAAA,MAAM,CAAC,YAAY,CAAC,WAAW,EAAE;AAC/B,QAAA,MAAM,EAAE,OAAO;AACf,QAAA,IAAI,EAAE,gGAAgG;AACtG,QAAA,OAAO,EAAE,KAAK;AACf,KAAA,CAAC;AAEF,IAAA,MAAM,CAAC,YAAY,CAAC,eAAe,EAAE;AACnC,QAAA,OAAO,EAAE,kBAAkB,CAAC,UAAU,CAAC,QAAQ,EAAE;AACjD,QAAA,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACxB,QAAA,IAAI,EAAE,kFAAkF;AACzF,KAAA,CAAC;AACF,IAAA,MAAM,CAAC,YAAY,CAAC,sBAAsB,EAAE;AAC1C,QAAA,OAAO,EAAE,kBAAkB,CAAC,iBAAiB,CAAC,QAAQ,EAAE;AACxD,QAAA,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACxB,QAAA,IAAI,EAAE,2FAA2F;AAClG,KAAA,CAAC;AACF,IAAA,MAAM,CAAC,YAAY,CAAC,sBAAsB,EAAE;AAC1C,QAAA,OAAO,EAAE,kBAAkB,CAAC,gBAAgB,CAAC,QAAQ,EAAE;AACvD,QAAA,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;AACrB,QAAA,IAAI,EAAE,wDAAwD;AAC/D,KAAA,CAAC;AAEF,IAAA,MAAM,CAAC,YAAY,CAAC,4BAA4B,EAAE;AAChD,QAAA,OAAO,EAAE,WAAW;AACpB,QAAA,KAAK,EAAE,GAAG;AACV,QAAA,IAAI,EAAE,yIAAyI;AAChJ,KAAA,CAAC;AAEF,IAAA,MAAM,CAAC,YAAY,CAAC,wBAAwB,EAAE;AAC5C,QAAA,IAAI,EAAE,8CAA8C;QACpD,OAAO,EAAE,kBAAkB,CAAC,kBAAkB;AAC/C,KAAA,CAAC;IAEF,UAAU,CAAC,MAAM,EAAE;AACjB,QAAA,IAAI,EAAE,8BAA8B;AACpC,QAAA,QAAQ,EAAE,wBAAwB;AAClC,QAAA,IAAI,EAAE,mIAAmI;QACzI,OAAO,EAAE,kBAAkB,CAAC,wBAAwB;AACrD,KAAA,CAAC;AAEF,IAAA,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE;AAC3B,QAAA,OAAO,EAAE,OAAO;AAChB,QAAA,KAAK,EAAE,GAAG;AACV,QAAA,IAAI,EAAE,4DAA4D;QAClE,OAAO,EAAE,CAAC,GAAG,CAAC;AACf,KAAA,CAAC;AAEF,IAAA,MAAM,CAAC,YAAY,CAAC,aAAa,EAAE;AACjC,QAAA,IAAI,EAAE,+GAA+G;AACtH,KAAA,CAAC;AACJ;AAEO,eAAe,YAAY,CAAC,IAAsB,EAAA;AACvD,IAAA,MAAM,MAAM,GAAG,cAAc,CAAC,MAAM,EAAE;AACtC,IAAA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAW;AAC3B,QAAA,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;AACtD,QAAA,IAAI;AACF,YAAA,MAAM,SAAS,GAAG,iBAAiB,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;AAEhF,YAAA,MAAM,OAAO,CACX,IAAI,cAAc,CAAC;gBACjB,SAAS;gBACT,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,cAAc,EAAE,IAAI,CAAC,gBAAgB;gBAErC,gBAAgB,EAAE,IAAI,CAAC,kBAAkB;gBACzC,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,QAAQ,EAAE,IAAI,CAAC,SAAS;gBAExB,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,WAAW,EAAE,IAAI,CAAC,YAAY;gBAC9B,WAAW,EAAE,IAAI,CAAC,YAAY;gBAC9B,WAAW,EAAE,IAAI,CAAC,aAAa;gBAC/B,oBAAoB,EAAE,IAAI,CAAC,sBAAsB;gBACjD,oBAAoB,EAAE,IAAI,CAAC,sBAAsB;gBACjD,cAAc,EAAE,IAAI,CAAC,gBAAgB;gBACrC,cAAc,EAAE,IAAI,CAAC,eAAe;gBACpC,eAAe,EAAE,IAAI,CAAC,iBAAiB;AACvC,gBAAA,UAAU,EAAE,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC;AACxC,gBAAA,iBAAiB,EAAE,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC;AACtD,gBAAA,gBAAgB,EAAE,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC;AACrD,gBAAA,sBAAsB,EAAE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,wBAAwB,EAAE,GAAG,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;gBACzG,kBAAkB,EAAE,IAAI,CAAC,oBAAoB;gBAC7C,wBAAwB,EAAE,IAAI,CAAC,0BAA0B;gBAEzD,cAAc,EAAE,IAAI,CAAC,SAAS;AAC/B,aAAA,CAAC,CACH;YACD,MAAM,CAAC,YAAY,EAAE;;QACrB,OAAO,CAAC,EAAE;AACV,YAAA,IAAI,CAAC,YAAY,KAAK,EAAE;AACtB,gBAAA,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;;iBACV;AACL,gBAAA,MAAM,CAAC;;;AAGb,KAAC,CAAC;AACJ;;AC7MO,eAAe,iBAAiB,GAAA;AACrC,IAAA,gBAAgB,EAAE;AAClB,IAAA,MAAM,MAAM,GAAG,IAAI,cAAc,CAAC;AAChC,QAAA,IAAI,EAAE,SAAS;AAChB,KAAA,CAAC;AAEF,IAAA,MAAM,CAAC,YAAY,CAAC,WAAW,EAAE;AAC/B,QAAA,MAAM,EAAE,aAAa;AACrB,QAAA,IAAI,EAAE,0BAA0B;AAChC,QAAA,KAAK,EAAE,SAAS;AAChB,QAAA,IAAI,EAAE,SAAS;AAChB,KAAA,CAAC;IACF,MAAM,CAAC,YAAY,CAAC;AAClB,QAAA,OAAO,EAAE,OAAO;AACjB,KAAA,CAAC;IACF,eAAe,CAAC,MAAM,CAAC;AACvB,IAAA,MAAM,MAAM,GAAkB,MAAM,CAAC,UAAU,EAAE;AACjD,IAAA,QAAQ,MAAM,CAAC,OAAO;AACpB,QAAA,KAAK,OAAO;AACV,YAAA,MAAM,YAAY,CAAC,MAAM,CAAC;YAC1B;AACF,QAAA,KAAK,SAAS;;AAEZ,YAAA,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;YACzB;AACF,QAAA;YACE,MAAM,CAAC,UAAU,EAAE;YACnB;;AAEN;;ACjCA,KAAK,iBAAiB,EAAE"}