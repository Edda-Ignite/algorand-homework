export { SourceLocation } from './awst/source-location';
export * as ptypes from './awst_build/ptypes/for-export';
export { registerPTypes } from './awst_build/ptypes/register';
export { typeRegistry } from './awst_build/type-registry';
export { TypeResolver } from './awst_build/type-resolver';
export { compile } from './compile';
export { processInputPaths } from './input-paths/process-input-paths';
export { LoggingContext } from './logger';
export { CompileOptions } from './options';
export declare const encodingUtil: {
    utf8ToUint8Array: (value: string) => Uint8Array;
    bigIntToUint8Array: (val: bigint, fixedSize?: number | "dynamic") => Uint8Array;
    hexToUint8Array: (value: string) => Uint8Array;
    base32ToUint8Array: (value: string) => Uint8Array;
    base64ToUint8Array: (value: string) => Uint8Array;
    uint8ArrayToUtf8: (value: Uint8Array) => string;
    uint8ArrayToHex: (value: Uint8Array) => string;
    uint8ArrayToBase32: (value: Uint8Array) => string;
    uint8ArrayToBase64: (value: Uint8Array) => string;
    uint8ArrayToBigInt: (v: Uint8Array) => bigint;
};
