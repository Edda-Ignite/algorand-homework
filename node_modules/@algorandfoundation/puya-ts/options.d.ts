import { LogLevel } from './logger';
import type { Props } from './typescript-helpers';
export interface AlgoFile {
    sourceFile: string;
    outDir: string;
    fileContents?: string;
}
export declare class CompileOptions {
    readonly filePaths: AlgoFile[];
    readonly logLevel: LogLevel;
    readonly outputAwst: boolean;
    readonly outputAwstJson: boolean;
    readonly skipVersionCheck: boolean;
    /**
     * Don't generate artifacts for puya, or invoke puya
     */
    readonly dryRun: boolean;
    readonly outputTeal: boolean;
    readonly outputArc32: boolean;
    readonly outputArc56: boolean;
    readonly outputSsaIr: boolean;
    readonly outputOptimizationIr: boolean;
    readonly outputDestructuredIr: boolean;
    readonly outputMemoryIr: boolean;
    readonly outputBytecode: boolean;
    readonly outputSourceMap: boolean;
    readonly debugLevel: number;
    readonly optimizationLevel: number;
    readonly targetAvmVersion: number;
    readonly cliTemplateDefinitions: Record<string, Uint8Array | bigint>;
    readonly templateVarsPrefix: string;
    readonly localsCoalescingStrategy: LocalsCoalescingStrategy;
    readonly customPuyaPath?: string;
    constructor(options: Partial<Props<CompileOptions>> & {
        filePaths: AlgoFile[];
    });
    buildPuyaOptions(compilationSet: CompilationSetMapping): PuyaOptions;
}
export declare enum LocalsCoalescingStrategy {
    root_operand = "root_operand",
    root_operand_excluding_args = "root_operand_excluding_args",
    aggressive = "aggressive"
}
export type CompilationSetMapping = Record<string, string>;
export declare const defaultPuyaOptions: PuyaPassThroughOptions;
export type PuyaPassThroughOptions = Omit<PuyaOptions, 'compilationSet'>;
export declare class PuyaOptions {
    outputTeal: boolean;
    outputArc32: boolean;
    outputArc56: boolean;
    outputSsaIr: boolean;
    outputOptimizationIr: boolean;
    outputDestructuredIr: boolean;
    outputMemoryIr: boolean;
    outputBytecode: boolean;
    outputSourceMap: boolean;
    debugLevel: number;
    optimizationLevel: number;
    targetAvmVersion: number;
    cliTemplateDefinitions: Record<string, Uint8Array | bigint>;
    templateVarsPrefix: string;
    localsCoalescingStrategy: LocalsCoalescingStrategy;
    compilationSet: CompilationSetMapping;
    constructor(options: Props<PuyaOptions>);
}
