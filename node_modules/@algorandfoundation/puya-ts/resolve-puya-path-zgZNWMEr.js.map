{"version":3,"file":"resolve-puya-path-zgZNWMEr.js","sources":["../src/constants.ts","../src/errors.ts","../src/util/base-32.ts","../src/util/index.ts","../src/awst/source-location.ts","../src/logger/index.ts","../src/util/generate-temp-file.ts","../src/util/sleep.ts","../src/util/lock-file.ts","../src/puya/puya-binary.ts","../src/puya/semver.ts","../src/puya/resolve-puya-path.ts"],"sourcesContent":["const algoTsPackage = '@algorandfoundation/algorand-typescript'\n\nexport const Constants = {\n  algoTsPackage,\n  moduleNames: {\n    polytype: 'polytype/lib/polytype-module.d.ts',\n    algoTs: {\n      arc28: `${algoTsPackage}/arc-28.d.ts`,\n      arc4: {\n        index: `${algoTsPackage}/arc4/index.d.ts`,\n        encodedTypes: `${algoTsPackage}/arc4/encoded-types.d.ts`,\n        c2c: `${algoTsPackage}/arc4/c2c.d.ts`,\n      },\n      baseContract: `${algoTsPackage}/base-contract.d.ts`,\n      box: `${algoTsPackage}/box.d.ts`,\n      compiled: `${algoTsPackage}/compiled.d.ts`,\n      itxn: `${algoTsPackage}/itxn.d.ts`,\n      gtxn: `${algoTsPackage}/gtxn.d.ts`,\n      logicSig: `${algoTsPackage}/logic-sig.d.ts`,\n      mutableArray: `${algoTsPackage}/mutable-array.d.ts`,\n      onCompleteAction: `${algoTsPackage}/on-complete-action.d.ts`,\n      op: `${algoTsPackage}/op.d.ts`,\n      primitives: `${algoTsPackage}/primitives.d.ts`,\n      reference: `${algoTsPackage}/reference.d.ts`,\n      state: `${algoTsPackage}/state.d.ts`,\n      templateVar: `${algoTsPackage}/template-var.d.ts`,\n      transactions: `${algoTsPackage}/transactions.d.ts`,\n      util: `${algoTsPackage}/util.d.ts`,\n    },\n  },\n\n  symbolNames: {\n    approvalProgramMethodName: 'approvalProgram',\n    clearStateProgramMethodName: 'clearStateProgram',\n    arc4BareDecoratorName: 'arc4.baremethod',\n    arc4AbiDecoratorName: 'arc4.abimethod',\n    contractOptionsDecoratorName: 'contract',\n    logicSigOptionsDecoratorName: 'logicsig',\n    constructorMethodName: 'constructor',\n    logicSigProgramMethodName: 'program',\n    defaultCreateMethodName: '__algots__.defaultCreate',\n    conventionalRouting: {\n      closeOutOfApplicationMethodName: 'closeOutOfApplication',\n      createApplicationMethodName: 'createApplication',\n      deleteApplicationMethodName: 'deleteApplication',\n      optInToApplicationMethodName: 'optInToApplication',\n      updateApplicationMethodName: 'updateApplication',\n    },\n  },\n\n  algo: {\n    arc4: {\n      logPrefixHex: '151F7C75',\n    },\n    addressLength: 32,\n    encodedAddressLength: 58,\n    maxTransactionGroupSize: 16,\n    zeroAddressB32: 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ',\n  },\n\n  supportedAvmVersions: [10n, 11n],\n  targetedPuyaVersion: '4.7.0',\n  puyaGithubRepo: 'algorandfoundation/puya',\n  minNodeVersion: '22.14.0',\n  languageServerSource: 'puyats',\n} as const\n\nexport type SupportedAvmVersion = (typeof Constants.supportedAvmVersions)[number]\n","import type { SourceLocation } from './awst/source-location'\nimport type { PType, PTypeOrClass } from './awst_build/ptypes'\n\ntype PuyaErrorOptions = {\n  cause?: Error\n  sourceLocation?: SourceLocation\n}\n\nexport class PuyaError extends Error {\n  readonly sourceLocation: SourceLocation | undefined\n  constructor(message?: string, options?: PuyaErrorOptions) {\n    super(message, options)\n    this.sourceLocation = options?.sourceLocation\n  }\n}\n\n/**\n * Any error that is 'caused' by a user of Puya\n */\nexport abstract class UserError extends PuyaError {}\n\n/**\n * Thrown when the user's code is invalid, or not supported\n */\nexport class CodeError extends UserError {\n  static unexpectedUnhandledArgs({ sourceLocation }: { sourceLocation: SourceLocation }) {\n    return new CodeError('Unexpected/unhandled args', {\n      sourceLocation,\n    })\n  }\n  static unexpectedTypeArgs({ sourceLocation }: { sourceLocation: SourceLocation }) {\n    return new CodeError('Function does not accept type arguments', {\n      sourceLocation,\n    })\n  }\n  static expectedCompileTimeConstant({ sourceLocation }: { sourceLocation: SourceLocation }) {\n    return new CodeError('Expected compile time constant', {\n      sourceLocation,\n    })\n  }\n  static invalidAssignmentTarget({ sourceLocation, name }: { sourceLocation: SourceLocation; name: string }) {\n    return new CodeError(`${name} is not a valid assignment target`, {\n      sourceLocation,\n    })\n  }\n  static cannotResolveToType({\n    sourceType,\n    targetType,\n    sourceLocation,\n  }: {\n    sourceLocation: SourceLocation\n    sourceType: PType\n    targetType: PTypeOrClass\n  }) {\n    const targetName = targetType instanceof Function ? targetType.name : targetType.fullName\n    return new CodeError(`Cannot resolve ${sourceType} to ${targetName}`, { sourceLocation })\n  }\n}\n\n/**\n * Thrown when the compiler ends up in an unrecoverable state\n */\nexport class InternalError extends PuyaError {\n  static shouldBeUnreachable() {\n    return new InternalError('Code should be unreachable')\n  }\n}\nexport class NotSupported extends CodeError {\n  constructor(featureName: string, options?: PuyaErrorOptions) {\n    super(`Not Supported: ${featureName}`, options)\n  }\n}\n\n/**\n * Thrown when the user's environment is not set up correctly\n */\nexport class EnvironmentError extends UserError {}\n\nexport const throwError = (error: Error): never => {\n  throw error\n}\nexport const wrapInCodeError = <T>(func: () => T, sourceLocation: SourceLocation) => {\n  try {\n    return func()\n  } catch (e) {\n    if (e instanceof Error) {\n      throw new CodeError(e.message, { sourceLocation, cause: e })\n    } else {\n      throw new CodeError(String(e), { sourceLocation })\n    }\n  }\n}\n","const BASE32_ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'.split('')\n\nconst CHAR_TO_NUM = BASE32_ALPHABET.reduce((acc, cur, index) => ((acc[cur] = index), acc), {} as Record<string, number>)\n\nexport const base32ToUint8Array = (value: string): Uint8Array => {\n  let allChars = value\n    .split('')\n    .filter((c) => c !== '=')\n    .map((c) => {\n      const cUpper = c.toUpperCase()\n      if (cUpper in CHAR_TO_NUM) return CHAR_TO_NUM[cUpper]\n      throw new Error(`Invalid base32 char ${c}`)\n    })\n  const bytes = new Array<number>()\n  while (allChars.length) {\n    const [a, b, c, d, e, f, g, h, ...rest] = allChars\n    if (a === undefined || b === undefined) break\n    bytes.push(((a << 3) | (b >>> 2)) & 255)\n    if (c === undefined || d === undefined) break\n    bytes.push(((b << 6) | (c << 1) | (d >>> 4)) & 255)\n    if (e === undefined) break\n    bytes.push(((d << 4) | (e >>> 1)) & 255)\n    if (f === undefined || g === undefined) break\n    bytes.push(((e << 7) | (f << 2) | (g >>> 3)) & 255)\n    if (h === undefined) break\n    bytes.push(((g << 5) | h) & 255)\n    allChars = rest\n  }\n  return new Uint8Array(bytes)\n}\n\nexport const uint8ArrayToBase32 = (value: Uint8Array): string => {\n  let allBytes = Array.from(value)\n  let base32str = ''\n  while (allBytes.length) {\n    const [a, b, c, d, e, ...rest] = allBytes ?? [0, 0, 0, 0, 0]\n\n    if (allBytes.length < 1) break\n    base32str += BASE32_ALPHABET[a >>> 3]\n    base32str += BASE32_ALPHABET[((a << 2) | ((b || 0) >>> 6)) & 31]\n    if (allBytes.length < 2) break\n    base32str += BASE32_ALPHABET[(b >>> 1) & 31]\n    base32str += BASE32_ALPHABET[((b << 4) | (c >>> 4)) & 31]\n    if (allBytes.length < 3) break\n    base32str += BASE32_ALPHABET[((c << 1) | (d >>> 7)) & 31]\n    if (allBytes.length < 4) break\n    base32str += BASE32_ALPHABET[(d >>> 2) & 31]\n    base32str += BASE32_ALPHABET[((d << 3) | (e >>> 5)) & 31]\n    if (allBytes.length < 5) break\n    base32str += BASE32_ALPHABET[e & 31]\n    allBytes = rest\n  }\n  return base32str\n}\n","import { Buffer } from 'node:buffer'\nimport fs from 'node:fs'\nimport { TextDecoder } from 'node:util'\nimport upath from 'upath'\nimport type { SourceLocation } from '../awst/source-location'\nimport { Constants } from '../constants'\nimport { CodeError, InternalError } from '../errors'\nimport type { DeliberateAny } from '../typescript-helpers'\n\nexport { base32ToUint8Array, uint8ArrayToBase32 } from './base-32'\n\nclass InvariantError extends InternalError {}\n\n/**\n * Checks an invariant condition hold true. If this check fails it indicates the compiler is in an unstable state. For invariants related to\n * user code, use codeInvariant below.\n *\n * @param condition\n * @param message\n * @param sourceLocation\n */\nexport function invariant(condition: unknown, message: string, sourceLocation?: SourceLocation): asserts condition {\n  if (!condition) {\n    throw new InvariantError(message, { sourceLocation })\n  }\n}\n\n/**\n * Checks an invariant related to user code holds true. If this check fails it indicates the user code is not valid. For invariants the user\n * has no control over, use invariant above.\n * @param condition\n * @param message\n * @param sourceLocation\n */\nexport function codeInvariant(condition: unknown, message: string, sourceLocation?: SourceLocation): asserts condition {\n  if (!condition) {\n    throw new CodeError(message, {\n      sourceLocation,\n    })\n  }\n}\n\nexport const enumFromValue = <TValue, TEnum extends TValue>(\n  value: TValue,\n  enumType: Record<string, TEnum | string>,\n  message: string = 'Invalid enum value: ',\n) => {\n  if (Object.values(enumType).some((v) => v === value)) {\n    return value as TEnum\n  }\n  throw new Error(`${message} ${value}`)\n}\n\nexport const enumKeyFromValue = <TValue, TEnum extends TValue>(\n  value: TValue,\n  enumType: Record<string, TEnum>,\n  message: string = 'Invalid enum value: ',\n) => {\n  const key = Object.entries(enumType).find(([_, v]) => v === value)?.[0]\n  if (key) {\n    return key\n  }\n  throw new Error(`${message} ${value}`)\n}\n\nexport const convertEnum = <TEnumIn, TEnumOut, TKeys extends string>(\n  value: TEnumIn,\n  fromEnum: Record<TKeys, TEnumIn>,\n  toEnum: Record<TKeys, TEnumOut>,\n): TEnumOut => {\n  const keyOfValue = Object.entries(fromEnum).find(([, v]) => v === value)?.[0]\n  if (!keyOfValue) {\n    // missing value\n    throw new Error(`key missing: ${value}`)\n  }\n  return toEnum[keyOfValue as keyof typeof toEnum]\n}\n\nexport const tryConvertEnum = <TEnumIn, TEnumOut, TKeys extends string>(\n  value: TEnumIn,\n  fromEnum: Record<TKeys, TEnumIn>,\n  toEnum: Record<string, TEnumOut>,\n): TEnumOut | undefined => {\n  const keyOfValue = Object.entries(fromEnum).find(([, v]) => v === value)?.[0]\n  if (!keyOfValue) {\n    return undefined\n  }\n  return toEnum[keyOfValue as keyof typeof toEnum]\n}\n\nexport const expandMaybeArray = <T>(maybeArray: T | T[]): T[] => {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray]\n}\n\nexport const uint8ArrayToBase64 = (value: Uint8Array): string => Buffer.from(value).toString('base64')\n\nexport const hexToUint8Array = (value: string): Uint8Array => {\n  invariant(value.length % 2 === 0, 'Hex string must have even number of characters')\n  return Uint8Array.from(Buffer.from(value, 'hex'))\n}\n\nexport const base64ToUint8Array = (value: string): Uint8Array => {\n  return Uint8Array.from(Buffer.from(value, 'base64'))\n}\n\nexport const utf8ToUint8Array = (value: string): Uint8Array => {\n  const encoder = new TextEncoder()\n  return encoder.encode(value)\n}\n\nexport const uint8ArrayToBigInt = (v: Uint8Array): bigint => {\n  // Assume big-endian\n  return Array.from(v)\n    .toReversed()\n    .map((byte_value, i): bigint => BigInt(byte_value) << BigInt(i * 8))\n    .reduce((a, b) => a + b, 0n)\n}\n\nexport const uint8ArrayToHex = (value: Uint8Array): string => Buffer.from(value).toString('hex')\n\nexport const uint8ArrayToUtf8 = (value: Uint8Array): string => {\n  const decoder = new TextDecoder()\n  return decoder.decode(value)\n}\n\nexport const bigIntToUint8Array = (val: bigint, fixedSize: number | 'dynamic' = 'dynamic'): Uint8Array => {\n  if (val === 0n && fixedSize === 'dynamic') {\n    return new Uint8Array(0)\n  }\n  const maxBytes = fixedSize === 'dynamic' ? 4096 : fixedSize\n\n  let hex = val.toString(16)\n\n  // Pad the hex with zeros so it matches the size in bytes\n  if (fixedSize !== 'dynamic' && hex.length !== fixedSize * 2) {\n    hex = hex.padStart(fixedSize * 2, '0')\n  } else if (hex.length % 2 === 1) {\n    // Pad to 'whole' byte\n    hex = `0${hex}`\n  }\n  if (hex.length > maxBytes * 2) {\n    throw new InternalError(`Cannot encode ${val} as ${maxBytes} bytes as it would overflow`)\n  }\n  const byteArray = new Uint8Array(hex.length / 2)\n  for (let i = 0, j = 0; i < hex.length / 2; i++, j += 2) {\n    byteArray[i] = parseInt(hex.slice(j, j + 2), 16)\n  }\n  return byteArray\n}\n\nexport const hasFlags = <T extends number>(value: T, flags: T): boolean => (value & flags) === flags\nexport const intersectsFlags = <T extends number>(value: T, flags: T): boolean => Boolean(value & flags)\n\nexport function* enumerate<T>(iterable: Iterable<T>): IterableIterator<readonly [number, T]> {\n  let i = 0\n  for (const item of iterable) {\n    yield [i, item]\n    i++\n  }\n}\n\nexport function toSubScript(num: number) {\n  const subNumbers = ['\\u2080', '\\u2081', '\\u2082', '\\u2083', '\\u2084', '\\u2085', '\\u2086', '\\u2087', '\\u2088', '\\u2089']\n  return num\n    .toFixed(0)\n    .split('')\n    .map((x) => subNumbers[parseInt(x)])\n    .join('')\n}\n\nexport function instanceOfAny<T extends Array<{ new (...args: DeliberateAny[]): DeliberateAny }>>(\n  x: unknown,\n  ...types: T\n): x is InstanceType<T[number]> {\n  return types.some((t) => x instanceof t)\n}\n\n/**\n * Normalise a file path to only include relevant segments.\n *\n *  - Anything in /node_modules/ is truncated to <package-name>/path.ext\n *  - Anything in workingDirectory is truncated relative to the workingDirectory\n *  - Forward slashes are used to segment paths\n * @param filePath\n * @param workingDirectory\n */\nexport function normalisePath(filePath: string, workingDirectory: string): string {\n  const localPackageName = /packages\\/algo-ts\\/dist\\/(.*)$/.exec(filePath)\n  if (localPackageName) {\n    return `${Constants.algoTsPackage}/${localPackageName[1]}`\n  }\n  const nodeModuleName = /.*\\/node_modules\\/(.*)$/.exec(filePath)\n  if (nodeModuleName) {\n    return nodeModuleName[1]\n  }\n  const cwd = upath.normalize(`${workingDirectory}/`)\n  const normalizedPath = upath.normalize(filePath)\n  const moduleName = normalizedPath.startsWith(cwd) ? normalizedPath.slice(cwd.length) : normalizedPath\n  return moduleName.replaceAll('\\\\', '/')\n}\n\ntype SortDir = 'asc' | 'desc'\nexport const sortBy =\n  <T, TKey>(keySelector: (item: T) => TKey, dir: SortDir = 'asc') =>\n  (a: T, b: T) => {\n    const keyA = keySelector(a)\n    const keyB = keySelector(b)\n    return (dir === 'desc' ? -1 : 1) * (keyA < keyB ? -1 : keyA > keyB ? 1 : 0)\n  }\n/**\n * Can be used to filter a collection to a set of distinct items as determined by a specified key.\n * @param keySelector A lambda which when given an item, returns the items unique identifier\n *\n * Usage:\n *\n * ```\n * const distinctItems = nonDistinctItems.filter(distinct(x => x.uniqueId))\n * ```\n */\nexport const distinct = <T>(keySelector?: (item: T) => unknown) => {\n  const ks = keySelector || ((x: T) => x)\n  const set = new Set()\n  return (item: T) => {\n    if (set.has(ks(item))) {\n      return false\n    }\n\n    set.add(ks(item))\n    return true\n  }\n}\n\nexport const distinctByEquality = <T>(areEqual: (a: T, b: T) => boolean) => {\n  const set: T[] = []\n  return (item: T) => {\n    if (set.some((s) => areEqual(s, item))) return false\n    set.push(item)\n    return true\n  }\n}\n\nexport function mkDirIfNotExists(dir: string) {\n  if (!fs.existsSync(dir)) {\n    fs.mkdirSync(dir, { recursive: true })\n  }\n}\n\nexport function sameSets<T>(a: Iterable<T>, b: Iterable<T>) {\n  const setA = new Set(a)\n  const setB = new Set(b)\n  return setA.intersection(setB).size === setA.size\n}\n\nexport const zipStrict = <T1, T2>(array1: T1[], array2: T2[]): [T1, T2][] => {\n  invariant(array1.length === array2.length, 'Array lengths must match')\n  return array1.map((t1, idx) => [t1, array2[idx]])\n}\n\nexport function isIn<TSubject, TItem extends TSubject>(subject: TSubject, items: readonly TItem[]): subject is TItem {\n  return items.some((i) => i === subject)\n}\n\nexport function joinUint8Arrays(...arrays: Uint8Array[]): Uint8Array {\n  const length = arrays.reduce((acc, cur) => acc + cur.length, 0)\n  const result = new Uint8Array(length)\n  let offset = 0\n  for (const a of arrays) {\n    result.set(a, offset)\n    offset += a.length\n  }\n  return result\n}\n","import ts from 'typescript'\nimport { invariant, normalisePath } from '../util'\n\nexport class SourceLocation {\n  file: string | null\n  line: number\n  endLine: number\n  column: number\n  endColumn: number\n  scope: 'file' | 'range'\n\n  constructor(props: {\n    file?: string | null\n    line: number\n    endLine: number\n    column: number\n    endColumn: number\n    scope: SourceLocation['scope']\n  }) {\n    invariant(props.line <= props.endLine, 'Start line must be before end line')\n    if (props.line === props.endLine) invariant(props.column <= props.endColumn, 'Start column must be before end column')\n    this.file = props.file ?? null\n    this.line = props.line\n    this.endLine = props.endLine\n    this.column = props.column\n    this.endColumn = props.endColumn\n    this.scope = props.scope\n\n    // Exclude scope from enumerable properties so it doesn't end up being serialized\n    Object.defineProperty(this, 'scope', {\n      enumerable: false,\n    })\n  }\n\n  private static getStartAndEnd(node: ts.Node): { start: number; end: number } {\n    if (ts.isClassDeclaration(node)) {\n      return fromNodeTillStartOfNode(node, node.members.at(0))\n    }\n    if (ts.isMethodDeclaration(node) || ts.isFunctionDeclaration(node)) {\n      return fromNodeTillStartOfNode(node, node.body)\n    }\n    if (ts.isForStatement(node) || ts.isForInStatement(node) || ts.isForOfStatement(node)) {\n      return fromNodeTillStartOfNode(node, node.statement)\n    }\n    if (ts.isIfStatement(node)) {\n      return fromNodeTillStartOfNode(node, node.thenStatement)\n    }\n\n    return {\n      start: node.getStart(),\n      end: node.getEnd(),\n    }\n  }\n\n  static fromNode(node: ts.Node, programDirectory: string): SourceLocation {\n    const sourceFile = node.getSourceFile()\n\n    const { start, end } = SourceLocation.getStartAndEnd(node)\n\n    const startLoc = sourceFile.getLineAndCharacterOfPosition(start)\n    const endLoc = sourceFile.getLineAndCharacterOfPosition(end)\n\n    return new SourceLocation({\n      file: normalisePath(sourceFile.fileName, programDirectory),\n      line: startLoc.line + 1,\n      endLine: endLoc.line + 1,\n      column: startLoc.character,\n      endColumn: endLoc.character,\n      scope: 'range',\n    })\n  }\n\n  static fromFile(sourceFile: ts.SourceFile, programDirectory: string): SourceLocation {\n    const endPos = sourceFile.getEnd()\n    const endLoc = sourceFile.getLineAndCharacterOfPosition(endPos)\n    return new SourceLocation({\n      file: normalisePath(sourceFile.fileName, programDirectory),\n      line: 1,\n      endLine: endLoc.line + 1,\n      column: 0,\n      endColumn: endLoc.character,\n      scope: 'file',\n    })\n  }\n\n  static fromTextRange(sourceFile: ts.SourceFile, textRange: ts.TextRange, programDirectory: string): SourceLocation {\n    const startLoc = sourceFile.getLineAndCharacterOfPosition(textRange.pos)\n    const endLoc = sourceFile.getLineAndCharacterOfPosition(textRange.end)\n\n    return new SourceLocation({\n      file: normalisePath(sourceFile.fileName, programDirectory),\n      line: startLoc.line + 1,\n      endLine: endLoc.line + 1,\n      column: startLoc.character,\n      endColumn: endLoc.character,\n      scope: 'range',\n    })\n  }\n\n  static fromDiagnostic(diagnostic: ts.DiagnosticWithLocation, programDirectory: string): SourceLocation {\n    const startLoc = diagnostic.file.getLineAndCharacterOfPosition(diagnostic.start)\n\n    return new SourceLocation({\n      file: normalisePath(diagnostic.file.fileName, programDirectory),\n      line: startLoc.line + 1,\n      endLine: startLoc.line + 1,\n      column: startLoc.character,\n      endColumn: startLoc.character,\n      scope: 'range',\n    })\n  }\n\n  toString() {\n    return `${this.file}:${this.line}:${this.column + 1}`\n  }\n\n  static fromLocations(...sourceLocation: SourceLocation[]): SourceLocation {\n    const [first, ...rest] = sourceLocation\n    invariant(first && rest.every((r) => r.file === first.file), 'All locations must of the same file')\n    if (rest.length === 0) return first\n    return sourceLocation.reduce((acc, cur) => {\n      return new SourceLocation({\n        file: acc.file,\n        line: Math.min(acc.line, cur.line),\n        endLine: Math.max(acc.endLine, cur.endLine),\n        column: acc.line === cur.line ? Math.min(acc.column, cur.column) : acc.line < cur.line ? acc.column : cur.column,\n        endColumn:\n          acc.endLine === cur.endLine ? Math.max(acc.endColumn, cur.endColumn) : acc.endLine > cur.endLine ? acc.endColumn : cur.endColumn,\n        scope: 'range',\n      })\n    })\n  }\n\n  static None = new SourceLocation({\n    line: 1,\n    endLine: 1,\n    column: 0,\n    endColumn: 1,\n    scope: 'file',\n  })\n}\n\nfunction fromNodeTillStartOfNode(n1: ts.Node, n2?: ts.Node): { start: number; end: number } {\n  return {\n    start: n1.getStart(),\n    end: n2 ? n2.getStart() - n2.getLeadingTriviaWidth() : n1.getEnd(),\n  }\n}\n","import { AsyncLocalStorage } from 'node:async_hooks'\nimport { SourceLocation } from '../awst/source-location'\nimport { PuyaError, UserError } from '../errors'\nimport type { LogSink } from './sinks'\n\ntype NodeOrSourceLocation = SourceLocation | { sourceLocation: SourceLocation }\n\nexport enum LogLevel {\n  Error = 'error',\n  Info = 'info',\n  Warning = 'warning',\n  Debug = 'debug',\n  Critical = 'critical',\n}\nconst logLevelToInt = {\n  [LogLevel.Critical]: 4,\n  [LogLevel.Error]: 3,\n  [LogLevel.Info]: 1,\n  [LogLevel.Warning]: 2,\n  [LogLevel.Debug]: 0,\n}\n\nexport const isMinLevel = (logLevel: LogLevel, minLevel: LogLevel): boolean => {\n  return logLevelToInt[minLevel] <= logLevelToInt[logLevel]\n}\n\nconst errorOrCritical = new Set([LogLevel.Error, LogLevel.Critical])\n\nexport const isErrorOrCritical = (l: LogLevel) => errorOrCritical.has(l)\n\nexport type LogEvent = {\n  level: LogLevel\n  message: string\n  sourceLocation: SourceLocation | undefined\n}\n\nclass PuyaLogger {\n  private logSinks: LogSink[] = []\n  public configure(sinks: LogSink[]) {\n    this.logSinks = sinks\n  }\n\n  addLog(level: LogEvent['level'], source: NodeOrSourceLocation | undefined, message: string) {\n    const logEvent: LogEvent = {\n      sourceLocation: source ? (source instanceof SourceLocation ? source : source.sourceLocation) : undefined,\n      message,\n      level,\n    }\n    LoggingContext.current.logEvents.push(logEvent)\n    for (const sink of this.logSinks) {\n      if (isMinLevel(logEvent.level, sink.minLogLevel)) sink.add(logEvent)\n    }\n  }\n\n  error(error: Error): void\n  error(source: NodeOrSourceLocation | undefined, message: string): void\n  error(source: NodeOrSourceLocation | undefined | Error, message?: string): void {\n    if (source instanceof Error) {\n      // Don't include the stack for user errors as the message and source location is what's relevant\n      const stack = source instanceof UserError ? '' : `\\n ${source.stack}`\n      this.addLog(LogLevel.Error, tryGetSourceLocationFromError(source), `${source.message}${stack}`)\n      if (source.cause) {\n        this.addLog(LogLevel.Error, tryGetSourceLocationFromError(source.cause), `Caused by: ${source.cause}`)\n      }\n    } else {\n      this.addLog(LogLevel.Error, source, message ?? '')\n    }\n  }\n  info(source: NodeOrSourceLocation | undefined, message: string): void {\n    this.addLog(LogLevel.Info, source, message)\n  }\n  debug(source: NodeOrSourceLocation | undefined, message: string): void {\n    this.addLog(LogLevel.Debug, source, message)\n  }\n  warn(source: NodeOrSourceLocation | undefined, message: string): void {\n    this.addLog(LogLevel.Warning, source, message)\n  }\n  critical(source: NodeOrSourceLocation | undefined, message: string): void {\n    this.addLog(LogLevel.Critical, source, message)\n  }\n}\n\nconst tryGetSourceLocationFromError = (error: unknown): SourceLocation | undefined => {\n  if (error instanceof PuyaError) {\n    return error.sourceLocation\n  }\n  return undefined\n}\n\nexport const logger = new PuyaLogger()\n\nexport const patchErrorLocation = <TArgs extends unknown[], TReturn>(\n  action: (...args: TArgs) => TReturn,\n  sourceLocation: SourceLocation,\n) => {\n  return (...args: TArgs) => {\n    try {\n      return action(...args)\n    } catch (e) {\n      if (e instanceof PuyaError && !e.sourceLocation) {\n        Object.assign(e, { sourceLocation })\n      }\n      throw e\n    }\n  }\n}\n\nexport class LoggingContext {\n  logEvents: LogEvent[] = []\n  sourcesByPath: Record<string, string[]> = {}\n\n  private constructor() {}\n\n  hasErrors(): boolean {\n    return this.logEvents.some((e) => isErrorOrCritical(e.level))\n  }\n\n  exitIfErrors(): void {\n    if (this.hasErrors()) process.exit(1)\n  }\n\n  enterContext() {\n    LoggingContext.asyncStore.enterWith(this)\n    return this\n  }\n\n  run<R>(cb: () => R) {\n    return LoggingContext.asyncStore.run(this, cb)\n  }\n  private static fallbackContext = new LoggingContext()\n  private static asyncStore = new AsyncLocalStorage<LoggingContext>()\n\n  static create(): LoggingContext {\n    return new LoggingContext()\n  }\n  static get current() {\n    const ctx = this.asyncStore.getStore()\n    if (!ctx) {\n      return this.fallbackContext\n    }\n    return ctx\n  }\n}\n","import { randomUUID } from 'crypto'\nimport fs from 'fs'\nimport { globIterateSync } from 'glob'\nimport type { WriteFileOptions } from 'node:fs'\nimport os from 'os'\nimport upath from 'upath'\nimport { mkDirIfNotExists } from './index'\n\nexport type TempFile = {\n  writeFileSync(data: NodeJS.ArrayBufferView, options?: WriteFileOptions): void\n  writeFileSync(data: string, options?: WriteFileOptions): void\n  readonly filePath: string\n} & Disposable\n\nfunction ensureTempDir(): string {\n  const tempDir = upath.join(os.tmpdir(), 'puya-ts')\n  mkDirIfNotExists(tempDir)\n  return tempDir\n}\n\nexport function generateTempFile(options?: { ext?: string }): TempFile {\n  const { ext = 'tmp' } = options ?? {}\n  const filePath = upath.join(ensureTempDir(), `${randomUUID()}.${ext}`)\n\n  return {\n    get filePath() {\n      return filePath\n    },\n    writeFileSync(data: string | NodeJS.ArrayBufferView, options?: WriteFileOptions) {\n      fs.writeFileSync(filePath, data, options)\n    },\n    [Symbol.dispose]() {\n      fs.rmSync(filePath)\n    },\n  }\n}\nexport type TempDir = {\n  readonly dirPath: string\n  files(): IterableIterator<string>\n} & Disposable\n\nexport function generateTempDir(): TempDir {\n  const dirPath = upath.join(ensureTempDir(), `${randomUUID()}`)\n  mkDirIfNotExists(dirPath)\n\n  return {\n    get dirPath() {\n      return dirPath\n    },\n    *files(): IterableIterator<string> {\n      for (const p of globIterateSync(upath.join(dirPath, '**'), {\n        nodir: true,\n      })) {\n        yield p\n      }\n    },\n    [Symbol.dispose]() {\n      fs.rmSync(dirPath, { recursive: true, force: true })\n    },\n  }\n}\n","export function sleep(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n","import { existsSync, mkdirSync, rmdirSync, statSync } from 'fs'\nimport { onExit } from 'signal-exit'\nimport { logger } from '../logger'\nimport { sleep } from './sleep'\n\nconst lockPaths = new Set<string>()\n\nfunction acquireLock(path: string, options?: { staleMs?: number }) {\n  const { staleMs = 60 * 1000 } = options ?? {}\n  lockPaths.add(path)\n\n  if (existsSync(path)) {\n    const now = Date.now()\n    const fileStat = statSync(path)\n\n    if (now - fileStat.mtime.getTime() > staleMs) {\n      // Remove the lock file if it has expired\n      rmdirSync(path)\n    } else {\n      throw new Error('Lock file already exists')\n    }\n  }\n\n  mkdirSync(path, { recursive: true })\n}\n\nexport async function createLockFile(\n  path: string,\n  options?: { staleMs?: number; maxRetries?: number; delayMs?: number },\n): Promise<AsyncDisposable> {\n  const { maxRetries = 3, delayMs = 1000 } = options ?? {}\n\n  for (let i = 0; i < maxRetries; i++) {\n    try {\n      acquireLock(path, options)\n\n      return {\n        async [Symbol.asyncDispose]() {\n          await unlockFile(path)\n        },\n      }\n    } catch (err) {\n      logger.debug(undefined, `Failed to acquire lock file ${path}: ${err}`)\n      await sleep(delayMs)\n    }\n  }\n\n  throw new Error('Failed to lock file')\n}\n\nasync function unlockFile(path: string): Promise<void> {\n  try {\n    rmdirSync(path)\n    lockPaths.delete(path)\n  } catch (err) {\n    logger.warn(undefined, `Failed to unlock file ${path}: ${err}`)\n  }\n}\n\nonExit(() => {\n  for (const path of lockPaths) {\n    unlockFile(path)\n  }\n})\n","import * as crypto from 'crypto'\nimport * as fs from 'fs'\nimport { fileURLToPath } from 'node:url'\nimport * as path from 'path'\nimport * as tar from 'tar'\nimport upath from 'upath'\nimport { Constants } from '../constants'\nimport { InternalError } from '../errors'\nimport { logger } from '../logger'\nimport { generateTempDir } from '../util/generate-temp-file'\nimport type { SemVer } from './semver'\n\n/**\n * Gets the platform-specific binary name\n * @returns The appropriate binary name for the current platform\n */\nfunction getBinaryName(): string {\n  return process.platform === 'win32' ? 'puya.exe' : 'puya'\n}\n\nfunction getPuyaTsDir(): string {\n  try {\n    return upath.dirname(require.resolve('@algorandfoundation/puya-ts'))\n  } catch {\n    return upath.dirname(fileURLToPath(import.meta.url))\n  }\n}\n\nexport function getPuyaStorageDir(): string {\n  const puyaTsDirName = getPuyaTsDir()\n  return path.join(puyaTsDirName, '.puya')\n}\n\nexport function getCachedPuyaBinaryPath(puyaStorageDir: string, version: SemVer): string {\n  const binaryFileName = getBinaryName()\n  return path.join(puyaStorageDir, version.formatted, binaryFileName)\n}\n\n/**\n * Gets the platform-specific details for downloads\n * @returns Object containing OS and architecture information\n */\nfunction getPlatformDetails(): { os: string; arch: string } {\n  const cliMessage = `Please refer to the puya-ts CLI documentation for information on how to install the Puya backend manually.`\n\n  // Map Node.js platform to OS name used in filenames\n  let os: string\n  switch (process.platform) {\n    case 'win32':\n      os = 'windows'\n      break\n    case 'darwin':\n      os = 'macos'\n      break\n    case 'linux':\n      os = 'linux'\n      break\n    default:\n      throw new InternalError(`Unsupported platform: ${process.platform}. ${cliMessage}`)\n  }\n\n  // Map Node.js architecture to architecture name used in filenames\n  let arch: string\n  switch (process.arch) {\n    case 'x64':\n      arch = 'x64'\n      break\n    case 'arm64':\n      arch = 'arm64'\n      break\n    default:\n      throw new InternalError(`Unsupported architecture: ${process.arch}. ${cliMessage}`)\n  }\n\n  return { os, arch }\n}\n\n/**\n * Downloads the Puya binary for a specific release version\n * @param version The release version to download (e.g., \"1.0.0\")\n * @returns Promise that resolves to the path of the extracted binary\n */\nexport async function downloadPuyaBinary(puyaStorageDir: string, version: SemVer): Promise<string> {\n  // Get platform-specific details\n  const { os, arch } = getPlatformDetails()\n\n  // Build platform-specific filenames\n  const platformId = `${os}_${arch}`\n  const archiveFileName = `puya-${version.formatted}-${platformId}.tar.gz`\n  const checksumFileName = `puya-${version.formatted}-${platformId}.sha256.txt`\n  const binaryFileName = getBinaryName()\n\n  const extractedDir = path.join(puyaStorageDir, version.formatted)\n\n  // Ensure our storage directories exist\n  if (!fs.existsSync(extractedDir)) {\n    fs.mkdirSync(extractedDir, { recursive: true })\n  }\n\n  using tempDir = generateTempDir()\n\n  const archiveFilePath = path.join(tempDir.dirPath, archiveFileName)\n  const checksumFilePath = path.join(tempDir.dirPath, checksumFileName)\n  const extractedBinaryPath = path.join(extractedDir, binaryFileName)\n\n  logger.debug(undefined, `Downloading Puya binary for version ${version.formatted} and platform ${platformId}`)\n  const archiveUrl = `https://github.com/${Constants.puyaGithubRepo}/releases/download/v${version.formatted}/${archiveFileName}`\n  const checksumUrl = `https://github.com/${Constants.puyaGithubRepo}/releases/download/v${version.formatted}/${checksumFileName}`\n\n  await downloadFile(archiveUrl, archiveFilePath)\n  await downloadFile(checksumUrl, checksumFilePath)\n\n  await verifyChecksum(archiveFilePath, archiveFileName, checksumFilePath)\n\n  await tar.extract({\n    file: archiveFilePath,\n    cwd: extractedDir,\n  })\n\n  // Check if extraction was successful and binary exists\n  if (!fs.existsSync(extractedBinaryPath)) {\n    throw new InternalError(`Binary file ${binaryFileName} not found in the extracted archive`)\n  }\n\n  logger.debug(undefined, `Successfully downloaded and extracted Puya binary to ${extractedBinaryPath}`)\n  return extractedBinaryPath\n}\n\n/**\n * Downloads a file from a URL to a specified path\n * @param url The URL to download from\n * @param destination The local path to save the file to\n * @returns Promise that resolves when the download is complete\n */\nasync function downloadFile(url: string, destination: string): Promise<void> {\n  const response = await fetch(url)\n  if (!response.ok) {\n    throw new Error(`Failed to download file. Status Code: ${response.status}`)\n  }\n  const buffer = await response.arrayBuffer()\n  return await new Promise<void>((resolve, reject) => {\n    const fileStream = fs.createWriteStream(destination)\n    const nodeBuffer = Buffer.from(buffer)\n\n    fileStream.write(nodeBuffer)\n    fileStream.end()\n\n    fileStream.on('finish', () => {\n      resolve()\n    })\n\n    fileStream.on('error', (err) => {\n      fs.unlinkSync(destination)\n      reject(err)\n    })\n  })\n}\n\n/**\n * Verifies the checksum of a downloaded file\n * @param filePath Path to the file to verify\n * @param checksumFilePath Path to the checksum file\n * @returns Promise that resolves to true if the checksum matches, false otherwise\n */\nasync function verifyChecksum(filePath: string, fileName: string, checksumFilePath: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    // Read the checksum file\n    const expectedChecksum = fs.readFileSync(checksumFilePath, 'utf8').trim().toLowerCase()\n\n    // Calculate the SHA256 checksum of the downloaded file\n    const hash = crypto.createHash('sha256')\n    const stream = fs.createReadStream(filePath)\n\n    stream.on('data', (data) => {\n      hash.update(data)\n    })\n\n    stream.on('end', () => {\n      const calculatedChecksum = hash.digest('hex').toLowerCase()\n\n      if (`${calculatedChecksum}  ${fileName}` === expectedChecksum) {\n        resolve()\n      }\n      reject(new InternalError(`Checksum verification failed. Expected checksum: ${expectedChecksum} but got: ${calculatedChecksum}`))\n    })\n  })\n}\n","import { InternalError } from '../errors'\n\nexport type SemVer = {\n  major: number\n  minor: number\n  rev: number\n  formatted: string\n}\n\nexport function parseSemVer(version: string): SemVer {\n  const matched = /^(\\d+)\\.(\\d+)\\.(\\d+)$/.exec(version)\n  if (!matched) {\n    throw new InternalError(`Invalid version string: ${version}`)\n  }\n\n  return {\n    major: Number(matched[1]),\n    minor: Number(matched[2]),\n    rev: Number(matched[3]),\n    formatted: version,\n  }\n}\n","import * as fs from 'fs'\nimport { Constants } from '../constants'\nimport { logger } from '../logger'\nimport { createLockFile } from '../util/lock-file'\nimport { downloadPuyaBinary, getCachedPuyaBinaryPath, getPuyaStorageDir } from './puya-binary'\nimport { parseSemVer } from './semver'\n\nexport async function resolvePuyaPath(): Promise<string> {\n  const version = parseSemVer(Constants.targetedPuyaVersion)\n\n  const puyaStorageDir = getPuyaStorageDir()\n  const cachedBinaryPath = getCachedPuyaBinaryPath(puyaStorageDir, version)\n\n  if (isBinaryCached(cachedBinaryPath)) {\n    return cachedBinaryPath\n  }\n\n  await using _ = await createLockFile(`${puyaStorageDir}.lock`, { maxRetries: 30, delayMs: 1000, staleMs: 60 * 1000 })\n\n  // Between the first check and acquiring the lock, the binary may have been downloaded by another process.\n  // In this case there is no need to download the binary again.\n  if (isBinaryCached(cachedBinaryPath)) {\n    return cachedBinaryPath\n  }\n  return await downloadPuyaBinary(puyaStorageDir, version)\n}\n\nfunction isBinaryCached(cachePath: string): boolean {\n  if (fs.existsSync(cachePath)) {\n    logger.debug(undefined, `Found cached Puya binary at ${cachePath}`)\n    return true\n  }\n  return false\n}\n"],"names":["Buffer","fs"],"mappings":"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"}